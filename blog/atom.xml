<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿龙的博客</title>
  
  <subtitle>AWS, DevOps, IT Infrastructure, and Other Puzzles</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://longshilin.com/blog/"/>
  <updated>2019-05-31T09:42:10.000Z</updated>
  <id>https://longshilin.com/blog/</id>
  
  <author>
    <name>longshilin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GameFramework框架学习流程</title>
    <link href="https://longshilin.com/blog/b42dd2c7.html"/>
    <id>https://longshilin.com/blog/b42dd2c7.html</id>
    <published>2019-05-29T00:00:00.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<div style="padding-bottom:56.25%; position:relative; display:block; width: 100%"> <iframe width="100%" height="100%" src="https://www.processon.com/embed/5cb99469e4b0841b84374217" frameborder="0" allowfullscreen style="position:absolute; top:0; left: 0"></iframe></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div style=&quot;padding-bottom:56.25%; position:relative; display:block; width: 100%&quot;&gt;
 &lt;iframe width=&quot;100%&quot; height=&quot;100%&quot; src=&quot;https://www.proc
      
    
    </summary>
    
      <category term="Unity" scheme="https://longshilin.com/blog/categories/Unity/"/>
    
      <category term="GameFramework" scheme="https://longshilin.com/blog/categories/Unity/GameFramework/"/>
    
    
      <category term="Unity" scheme="https://longshilin.com/blog/tags/Unity/"/>
    
      <category term="GameFramework" scheme="https://longshilin.com/blog/tags/GameFramework/"/>
    
  </entry>
  
  <entry>
    <title>学习计划</title>
    <link href="https://longshilin.com/blog/5e21c553.html"/>
    <id>https://longshilin.com/blog/5e21c553.html</id>
    <published>2019-05-26T09:36:39.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<div style="padding-bottom:56.25%; position:relative; display:block; width: 100%"> <iframe width="100%" height="100%" src="https://docs.google.com/spreadsheets/d/e/2PACX-1vTVYo0JtxFXR7hvZcgXyHgMamDy7GJgX1fhlo3P-vANQTV3UR6ywSCkdbT28UfOn9BAxGkM7yRh1Suj/pubhtml?widget=true&amp;headers=false" frameborder="0" allowfullscreen style="position:absolute; top:0; left: 0"></iframe></div><p><a href="https://docs.google.com/spreadsheets/d/16dwuO70njoVBRt-Z8ibLC8Tdr0jlPjPb6-iIo0zVgoo/edit#gid=1171429774" target="_blank" rel="noopener"><u>打开文件</u></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div style=&quot;padding-bottom:56.25%; position:relative; display:block; width: 100%&quot;&gt;
 &lt;iframe width=&quot;100%&quot; height=&quot;100%&quot; src=&quot;https://docs.goo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>virtual和override实现继承关系</title>
    <link href="https://longshilin.com/blog/3e7c0e8a.html"/>
    <id>https://longshilin.com/blog/3e7c0e8a.html</id>
    <published>2019-05-24T02:25:21.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/inheritance" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/inheritance</a></p><p>详细信息直接看官方文档，我只记录自己的一点感受。</p><ol><li>子类继承父类时，需要用virtual和override配合。</li><li>子类重载方法中调用父类的该重载源方法，例如：<code>base.method();</code>，如果子类中没有调用，则不会执行父类该源方法的逻辑。</li></ol><a id="more"></a><p>------ 示例 ------</p><p><kbd>BaseClass.cs</kbd></p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LearnCSharp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">BaseClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">method</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"我是Base类！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><kbd>ChildClass.cs</kbd></p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LearnCSharp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">ChildClass</span> : <span class="title">BaseClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">method</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 调用子类的逻辑</span></span><br><span class="line">            Console.WriteLine(<span class="string">"我是Child类!"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用父类的逻辑</span></span><br><span class="line">            <span class="keyword">base</span>.method();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ChildClass childClass = <span class="keyword">new</span> ChildClass();</span><br><span class="line">            childClass.method();</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><kbd>控制台输出</kbd><br><img src="https://longshilin.com/images/20190524142854.png" alt="控制台输出"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;官方文档：&lt;a href=&quot;https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/inheritance&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/inheritance&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;详细信息直接看官方文档，我只记录自己的一点感受。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;子类继承父类时，需要用virtual和override配合。&lt;/li&gt;
&lt;li&gt;子类重载方法中调用父类的该重载源方法，例如：&lt;code&gt;base.method();&lt;/code&gt;，如果子类中没有调用，则不会执行父类该源方法的逻辑。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="语言" scheme="https://longshilin.com/blog/categories/%E8%AF%AD%E8%A8%80/"/>
    
      <category term="CSharp" scheme="https://longshilin.com/blog/categories/%E8%AF%AD%E8%A8%80/CSharp/"/>
    
    
      <category term="继承" scheme="https://longshilin.com/blog/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>Atom自定义代码片段以提高编码效率</title>
    <link href="https://longshilin.com/blog/f427fb19.html"/>
    <id>https://longshilin.com/blog/f427fb19.html</id>
    <published>2019-05-23T10:48:03.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过在Atom中自定义代码片段，绑定指定的文件类型，就可以在编辑该类型文件时实现快速提示功能。<br><img src="https://longshilin.com/images/20190523104526.gif" alt="Atom定制快捷提示片段示例"></p><a id="more"></a><p><img src="https://longshilin.com/images/20190523104940.png" alt="打开Atom的Snippets设置"></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 下面是我的自定义</span><br><span class="line">&apos;.text.md&apos;:</span><br><span class="line">  &apos;more&apos;:</span><br><span class="line">    &apos;prefix&apos;: &apos;more&apos;</span><br><span class="line">    &apos;body&apos;: &apos;&lt;!-- more --&gt;&apos;</span><br><span class="line"></span><br><span class="line">  &apos;title&apos;:</span><br><span class="line">    &apos;prefix&apos;: &apos;title&apos;</span><br><span class="line">    &apos;body&apos;: &apos;--- \ntitle: $1 \nlayout: post \ntags: \n  - $2 \ncategories: \n  - $3 \ncomments: true \ntoc: false \ndate: $4  \n---\n&apos;</span><br></pre></td></tr></table></figure><p>具体Snippets文件中的语法参考下面的官方文档：</p><p><a href="https://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson" title="Atom基本定制" target="_blank" rel="noopener">1.Atom基本定制官方文档</a></p><p><a href="https://flight-manual.atom.io/using-atom/sections/snippets/" target="_blank" rel="noopener">2.Atom片段设置</a></p><p><img src="https://longshilin.com/images/20190523105720.png" alt="查看文件类型的快速方式"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过在Atom中自定义代码片段，绑定指定的文件类型，就可以在编辑该类型文件时实现快速提示功能。&lt;br&gt;
&lt;img src=&quot;https://longshilin.com/images/20190523104526.gif&quot; alt=&quot;Atom定制快捷提示片段示例&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Atom" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/Atom/"/>
    
    
      <category term="Atom Snippets" scheme="https://longshilin.com/blog/tags/Atom-Snippets/"/>
    
      <category term="效率" scheme="https://longshilin.com/blog/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>Unity双击脚本不会自动跳转到vs中的解决方案</title>
    <link href="https://longshilin.com/blog/f243dbe9.html"/>
    <id>https://longshilin.com/blog/f243dbe9.html</id>
    <published>2019-05-23T10:13:13.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>在这个问题中，我遇到的时候是因为Unity中导入的VS Package版本不支持新版的Virtual Studio所导致的</p><a id="more"></a><p><img src="https://longshilin.com/images/20190522214037.png" alt="选择Package Manager"></p><p><img src="https://longshilin.com/images/20190523101650.png" alt="升级Visual Studio Editor Package"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在这个问题中，我遇到的时候是因为Unity中导入的VS Package版本不支持新版的Virtual Studio所导致的&lt;/p&gt;
    
    </summary>
    
      <category term="解决方案" scheme="https://longshilin.com/blog/categories/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
    
      <category term="Unity" scheme="https://longshilin.com/blog/tags/Unity/"/>
    
      <category term="Visual Studio" scheme="https://longshilin.com/blog/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>创建ECS项目</title>
    <link href="https://longshilin.com/blog/ac01c54a.html"/>
    <id>https://longshilin.com/blog/ac01c54a.html</id>
    <published>2019-05-22T18:00:00.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="选择unity版本">选择Unity版本</h3><p>我这里安装的是Unity2019.2.0b1版本，通过Unity Hub直接安装的，顺便推荐下Unity Hub这个软件。它是Unity官方用来在同一电脑上管理多个Unity版本的协同工具。</p><a id="more"></a><p><img src="https://longshilin.com/images/20190522212113.png" alt="选择Unity版本"></p><p><img src="https://longshilin.com/images/20190522212923.png" alt="创建项目"></p><p><img src="https://longshilin.com/images/20190522213442.png" alt="这是刚打开的样子"></p><h3 id="安装package">安装Package</h3><p><img src="https://longshilin.com/images/20190522214037.png" alt="打开Package Manager窗口"></p><p>由于ECS还没有作为正式组件公之于众，因此只能在预览包中看到它们的身影，ps：ECS作为正式组件预计在Unity2020.1版本中。</p><p><img src="https://longshilin.com/images/20190522214903.png" alt="预览版Package"></p><p>安装两个Package：</p><ul><li>Entities</li><li>Hybrid.Renderer</li></ul><p><img src="https://longshilin.com/images/20190522215142.png" alt="Entities Package"></p><p><img src="https://longshilin.com/images/20190522215208.png" alt="Hybrid.Renderer Package"></p><p>下面我们来对比下安装之前和安装之后，到底多了哪些包依赖，下面图是通过对比工具得到的，其实刚好就是增加安装的那两个包。</p><p><img src="https://longshilin.com/images/20190522214752.png" alt="安装package前后对比结果"></p><h3 id="了解package的依赖关系">了解Package的依赖关系</h3><p>另外需要补充的是，在安装这两个package的时候，下面这些包也已经被加入到项目中：</p><ul><li>Burst</li><li>Collections</li><li>Jobs</li><li>Mathematics</li></ul><p>可以通过勾选Advance -&gt; show dependencies查看两个package包依赖关系。</p><p><img src="https://longshilin.com/images/20190522215605.png" alt="Entities Package Dependence"></p><p><img src="https://longshilin.com/images/20190522215759.png" alt="Hybrid.Renderer Package Dependence"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;选择unity版本&quot;&gt;选择Unity版本&lt;/h3&gt;
&lt;p&gt;我这里安装的是Unity2019.2.0b1版本，通过Unity Hub直接安装的，顺便推荐下Unity Hub这个软件。它是Unity官方用来在同一电脑上管理多个Unity版本的协同工具。&lt;/p&gt;
    
    </summary>
    
      <category term="Unity" scheme="https://longshilin.com/blog/categories/Unity/"/>
    
      <category term="ECS" scheme="https://longshilin.com/blog/categories/Unity/ECS/"/>
    
    
      <category term="Project" scheme="https://longshilin.com/blog/tags/Project/"/>
    
  </entry>
  
  <entry>
    <title>Unity3D中使用委托</title>
    <link href="https://longshilin.com/blog/30526cbb.html"/>
    <id>https://longshilin.com/blog/30526cbb.html</id>
    <published>2019-05-14T20:00:00.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>首先来了解委托是什么，在《Unity3D脚本编程》一书中，指明委托要确定一个回调方法签名，包括参数以及返回类型等。在下面的例子中，MyDelegate委托定制的回调方法的参数类型是int型，同时返回类型为void。</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//声明一个委托类型，它的实例引用一个方法</span></span><br><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">MyDelegate</span>(<span class="params"><span class="keyword">int</span> num</span>)</span>;</span><br></pre></td></tr></table></figure><a id="more"></a><p>在为委托实例引用方法时，C#允许引用类型的协变性和逆变性。协变性是指方法的返回类型可以是从委托的返回类型派生的一个派生类，逆变性则是指方法获取的参数的类型可以是委托的参数的类型的基类。</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明一个委托类型</span></span><br><span class="line"><span class="function"><span class="keyword">delegate</span> Object <span class="title">TellMeYourName</span>(<span class="params">SoldierClass soldier</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化一个方法，该方法的返回值是委托的返回类型派生的一个派生类</span></span><br><span class="line"><span class="function"><span class="keyword">string</span> <span class="title">TellMeYourNameMethod</span>(<span class="params">BaseUnitClass <span class="keyword">base</span></span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意，这里该方法不能被绑定到委托实例上，编译器会报错。</span></span><br><span class="line"><span class="comment">// 这是因为虽然int型和string型一样，都派生自Object类，但是int型是值类型，因此是不支持协变性的。</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TellMeYourNameMethod</span>(<span class="params">BaseUnitClass <span class="keyword">base</span></span>)</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先来了解委托是什么，在《Unity3D脚本编程》一书中，指明委托要确定一个回调方法签名，包括参数以及返回类型等。在下面的例子中，MyDelegate委托定制的回调方法的参数类型是int型，同时返回类型为void。&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//声明一个委托类型，它的实例引用一个方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;internal&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyDelegate&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Unity" scheme="https://longshilin.com/blog/categories/Unity/"/>
    
      <category term="脚本编程" scheme="https://longshilin.com/blog/categories/Unity/%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Unity" scheme="https://longshilin.com/blog/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>1. Scripts as Behaviour Components</title>
    <link href="https://longshilin.com/blog/d6acd003.html"/>
    <id>https://longshilin.com/blog/d6acd003.html</id>
    <published>2019-05-14T19:00:00.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>这是本栏目的开篇文章，从一开始就了解游戏开发的编程。</p><a id="more"></a><h3 id="流程">流程</h3><p>创建一个Scene并添加一个Cube，在Cube上挂载<code>ExampleBehaviourScript.cs</code>这个文件，然后启动游戏。通过键盘输入 <kbd>R</kbd> 或 <kbd>G</kbd> 或 <kbd>B</kbd> 来改变Cube的颜色。</p><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ExampleBehaviourScript</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.R))</span><br><span class="line">        &#123;</span><br><span class="line">            GetComponent&lt;Renderer&gt; ().material.color = Color.red;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.G))</span><br><span class="line">        &#123;</span><br><span class="line">            GetComponent&lt;Renderer&gt;().material.color = Color.green;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.B))</span><br><span class="line">        &#123;</span><br><span class="line">            GetComponent&lt;Renderer&gt;().material.color = Color.blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是本栏目的开篇文章，从一开始就了解游戏开发的编程。&lt;/p&gt;
    
    </summary>
    
      <category term="Unity" scheme="https://longshilin.com/blog/categories/Unity/"/>
    
      <category term="Tutorial" scheme="https://longshilin.com/blog/categories/Unity/Tutorial/"/>
    
      <category term="Scripts" scheme="https://longshilin.com/blog/categories/Unity/Tutorial/Scripts/"/>
    
    
      <category term="Unity" scheme="https://longshilin.com/blog/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>c#JobSystem</title>
    <link href="https://longshilin.com/blog/27a62a5a.html"/>
    <id>https://longshilin.com/blog/27a62a5a.html</id>
    <published>2019-05-14T18:00:00.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.unity3d.com/Manual/JobSystem.html" target="_blank" rel="noopener">C# Job System 官方文档</a></p><p>Data-Oriented Technology Stack<br>数据和行为分离的很好，依赖关系也分的很清楚</p><a id="more"></a><p>Profile-&gt;c# Job System</p><p>一个核跑一个线程，Job System能够利用多核并行计算，达到高效计算。</p><p>Worker Threads | Base on number of cores | Plaform specific</p><p>Job System Work Flow</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://docs.unity3d.com/Manual/JobSystem.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C# Job System 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data-Oriented Technology Stack&lt;br&gt;
数据和行为分离的很好，依赖关系也分的很清楚&lt;/p&gt;
    
    </summary>
    
      <category term="Unity" scheme="https://longshilin.com/blog/categories/Unity/"/>
    
      <category term="ECS" scheme="https://longshilin.com/blog/categories/Unity/ECS/"/>
    
    
      <category term="c#" scheme="https://longshilin.com/blog/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>windows和mac上安装Tower破解版</title>
    <link href="https://longshilin.com/blog/b5410c9.html"/>
    <id>https://longshilin.com/blog/b5410c9.html</id>
    <published>2019-02-02T14:42:24.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Tower确实蛮好用的，才试用了几天就爱上了它。在<a href="https://www.git-tower.com" target="_blank" rel="noopener">Tower官网</a>这里有关它的介绍，以及有专门的<a href="https://www.git-tower.com/learn/" target="_blank" rel="noopener">电子书和视频</a>来让你快速上手Tower和git。</p><p><img src="https://ws1.sinaimg.cn/large/005EsThygy1fzs24oey0aj31z413ztdg.jpg" alt=""></p><a id="more"></a><p>#<kbd>Tower for windows</kbd><br>版本号截图<br><img src="https://longshilin.com/images/20190507100004.jpg" alt=""></p><p>Tower内部界面<br><img src="https://longshilin.com/images/20190507100014.jpg" alt=""></p><blockquote><p>下载地址：<a href="https://pan.baidu.com/s/1uFCJ3m18RUA1vhPfs27Zvw" target="_blank" rel="noopener">https://pan.baidu.com/s/1uFCJ3m18RUA1vhPfs27Zvw</a> 密码：r1ys</p></blockquote><p>#<kbd>Tower for Mac</kbd><br>版本号截图<br><img src="https://longshilin.com/images/20190507100042.jpg" alt=""></p><p>Tower内部界面<br><img src="https://longshilin.com/images/20190507100050.jpg" alt=""></p><blockquote><p>下载链接：<a href="https://pan.baidu.com/s/1mIQQXm-bEZcbnz06G-FJ2w" target="_blank" rel="noopener">https://pan.baidu.com/s/1mIQQXm-bEZcbnz06G-FJ2w</a> 密码：6fbn</p></blockquote><blockquote><p>有任何问题，请在留言区留言给我~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tower确实蛮好用的，才试用了几天就爱上了它。在&lt;a href=&quot;https://www.git-tower.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tower官网&lt;/a&gt;这里有关它的介绍，以及有专门的&lt;a href=&quot;https://www.git-tower.com/learn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;电子书和视频&lt;/a&gt;来让你快速上手Tower和git。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/005EsThygy1fzs24oey0aj31z413ztdg.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="版本控制" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="tower" scheme="https://longshilin.com/blog/tags/tower/"/>
    
      <category term="git" scheme="https://longshilin.com/blog/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>更新你的highlightjs版本和支持语言</title>
    <link href="https://longshilin.com/blog/61ee7b96.html"/>
    <id>https://longshilin.com/blog/61ee7b96.html</id>
    <published>2019-02-02T11:42:24.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>HighlightJS<br>发布状态：稳定<br>履行解析器功能<br>描述“highlight.js”客户端语法高亮显示的包装器<br>作者（S）Aran Dunkley（Nad）</p><a id="more"></a><p><kbd>Getting highlight.js</kbd><br>在<a href="https://highlightjs.org/download/" target="_blank" rel="noopener">https://highlightjs.org/download/</a>下载自定义的语法js文件，并替换hexo博客中原始的版本。注意博客中要用自己的js，而不是cdn中的。<br><img src="https://ws1.sinaimg.cn/large/005EsThygy1fzrwcicv8ej30mf1280vk.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HighlightJS&lt;br&gt;
发布状态：稳定&lt;br&gt;
履行	解析器功能&lt;br&gt;
描述	“highlight.js”客户端语法高亮显示的包装器&lt;br&gt;
作者（S）	Aran Dunkley（Nad）&lt;/p&gt;
    
    </summary>
    
      <category term="网站构建" scheme="https://longshilin.com/blog/categories/%E7%BD%91%E7%AB%99%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="highlightjs" scheme="https://longshilin.com/blog/tags/highlightjs/"/>
    
  </entry>
  
  <entry>
    <title>写博文的常用板书格式</title>
    <link href="https://longshilin.com/blog/7eae6d59.html"/>
    <id>https://longshilin.com/blog/7eae6d59.html</id>
    <published>2019-01-23T01:51:50.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<div class="bs-callout bs-callout-primary"><p>c如何写的漂亮… 这是一个好问题</p></div><p>下面会以这样的格式展示每一个模块<br>Markdown:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ABC</span><br></pre></td></tr></table></figure><p>…outputs:<br>ABC</p><a id="more"></a><h3 id="表格">表格</h3><p>Markdown:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Table Header 1 | Table Header 2 | Table Header 3 |</span><br><span class="line">| - | - | - |</span><br><span class="line">| Division 1 | Division 2 | Division 3 |</span><br><span class="line">| Division 1 | Division 2 | Division 3 |</span><br><span class="line">| Division 1 | Division 2 | Division 3 |</span><br></pre></td></tr></table></figure><p>…outputs:</p><table><thead><tr><th>Table Header 1</th><th>Table Header 2</th><th>Table Header 3</th></tr></thead><tbody><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr></tbody></table><h3 id="bootstrap重点标注">Bootstrap重点标注</h3><p>这个Bootstrap标注可以给你的文章增添更多的醒目标记信息。可选项：default | primary | success | info | warning | danger<br>Markdown:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% callout info %&#125;</span><br><span class="line">#### &#123;% fa info-circle %&#125; Info</span><br><span class="line">This is some info content</span><br><span class="line">&#123;% endcallout %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% callout warning %&#125;</span><br><span class="line">#### &#123;% fa exclamation-triangle %&#125; Warning</span><br><span class="line">This is some warning content</span><br><span class="line">&#123;% endcallout %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% callout danger %&#125;</span><br><span class="line">#### &#123;% fa exclamation-triangle %&#125; Danger</span><br><span class="line">This is some danger content</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure><p>…outputs:</p><div class="bs-callout bs-callout-info"><h4 id="i-class-fa-fa-info-circle-i-info"><i class="fa fa-info-circle"></i> Info</h4><p>This is some info content</p></div><div class="bs-callout bs-callout-warning"><h4 id="i-class-fa-fa-exclamation-triangle-i-warning"><i class="fa fa-exclamation-triangle"></i> Warning</h4><p>This is some warning content</p></div><div class="bs-callout bs-callout-danger"><h4 id="i-class-fa-fa-exclamation-triangle-i-danger"><i class="fa fa-exclamation-triangle"></i> Danger</h4><p>This is some danger content</p></div><h3 id="fa图标">fa图标</h3><p>在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome 资源</a>  可以选择你需要的任意图标。<br>Markdown：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% fa github %&#125;</span><br></pre></td></tr></table></figure><p>…outputs:</p><i class="fa fa-github"></i><h3 id="hexo-github-card">hexo-github-card</h3><p>在文章中引入某个github项目卡片，<a href="https://github.com/Gisonrg/hexo-github-card" target="_blank" rel="noopener">参考地址</a><br>Markdown:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% githubCard user:your_user [repo:your_repo] [width:400] [theme:Default] [client_id:your_client_id] [client_secret:your_client_secret] [align:text-align_position] %&#125;</span><br><span class="line"></span><br><span class="line">如：</span><br></pre></td></tr></table></figure><p>…outputs:</p><div style="text-align:center">  <div class="github-card" data-user="longshilin" data-repo="" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script><div style="text-align:center">  <div class="github-card" data-user="longshilin" data-repo="" data-width="400" data-theme="default" data-target="" data-client-id="" data-client-secret=""></div></div><script src="/github-card-lib/githubcard.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;bs-callout bs-callout-primary&quot;&gt;&lt;p&gt;c如何写的漂亮… 这是一个好问题&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;下面会以这样的格式展示每一个模块&lt;br&gt;
Markdown:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ABC&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;…outputs:&lt;br&gt;
ABC&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="写作" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="write" scheme="https://longshilin.com/blog/tags/write/"/>
    
      <category term="markdown" scheme="https://longshilin.com/blog/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>写博文必备的工具合集</title>
    <link href="https://longshilin.com/blog/4b315c79.html"/>
    <id>https://longshilin.com/blog/4b315c79.html</id>
    <published>2019-01-06T10:30:40.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里的工具合集主要是我写博客时需要涉及到的工具，这些工具的使用能够提高我的创作效率，并且给我带来实质上的便利。下面基本上是一句话概括每一个工具，并且配上官方使用的网页介绍，以及对于功能介绍的<i class="fa fa-file-pdf"></i>离线PDF版本以及<i class="fa fa-box"></i>安装包等资源的<i class="fa fa-archive"></i>归档文件目录分享。</p><a id="more"></a><h2 id="电脑优化性能集合">电脑优化性能集合</h2><h3 id="1-与多个平台进行整合的图床工具">[1] 与多个平台进行整合的图床工具</h3><ul><li>名称：PicGo</li><li>官方地址：<a href="https://molunerfinn.com/PicGo/" target="_blank" rel="noopener">https://molunerfinn.com/PicGo/</a></li><li>介绍：很不错的图床工具，适配多个平台，如：GitHub、微博、七牛、腾讯云等等。</li><li>推荐指数：⭐️⭐️⭐️⭐️⭐️</li></ul><h3 id="2-资源归档工具">[2] 资源归档工具</h3><ul><li>介绍：百度云网盘</li><li>官方地址：<a href="https://pan.baidu.com" target="_blank" rel="noopener">https://pan.baidu.com</a></li><li>介绍：网盘资源存放</li><li>推荐指数：⭐️⭐️⭐️⭐️⭐️</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的工具合集主要是我写博客时需要涉及到的工具，这些工具的使用能够提高我的创作效率，并且给我带来实质上的便利。下面基本上是一句话概括每一个工具，并且配上官方使用的网页介绍，以及对于功能介绍的&lt;i class=&quot;fa fa-file-pdf&quot;&gt;&lt;/i&gt;离线PDF版本以及&lt;i class=&quot;fa fa-box&quot;&gt;&lt;/i&gt;安装包等资源的&lt;i class=&quot;fa fa-archive&quot;&gt;&lt;/i&gt;归档文件目录分享。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="写作" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="tools" scheme="https://longshilin.com/blog/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>Double365</title>
    <link href="https://longshilin.com/blog/3e68368d.html"/>
    <id>https://longshilin.com/blog/3e68368d.html</id>
    <published>2019-01-01T14:03:48.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>这一次是我们第一次一起跨年，下面是我宝精心制作的视频剪辑哦，看的出来是花费了很多的精力的啦，嘻嘻 💘 希望宝贝以后的Vlog越来越多我也会更加配合的，哈哈哈😈 最后祝我宝猪年大吉呀🐷</p><a id="more"></a><p><video src="http://repo.longshilin.com/video/double365.mov" poster="https://ws1.sinaimg.cn/large/005EsThygy1fyx9bjpedvj30940fymx6.jpg" preload="" controls style="max-width: 50%; display: block; margin-left: auto; margin-right: auto;"><br>your browser does not support the video tag<br></video></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这一次是我们第一次一起跨年，下面是我宝精心制作的视频剪辑哦，看的出来是花费了很多的精力的啦，嘻嘻 💘 希望宝贝以后的Vlog越来越多我也会更加配合的，哈哈哈😈 最后祝我宝猪年大吉呀🐷&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>提升使用体验的工具合集</title>
    <link href="https://longshilin.com/blog/725d13af.html"/>
    <id>https://longshilin.com/blog/725d13af.html</id>
    <published>2018-12-03T10:30:40.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里的工具合集，基本上是一句话概括每一个工具，并且配上官方使用的网页介绍，以及对于功能介绍的<i class="fas fa-file-pdf"></i>离线PDF版本以及安装包等资源 <i class="fas fa-archive"></i>。</p><a id="more"></a><h2 id="电脑优化性能集合">电脑优化性能集合</h2><h3 id="1-轻量化去广告的内存清理工具">[1] 轻量化去广告的内存清理工具</h3><ul><li>名称：Mem Reduct</li><li>官方地址：<a href="https://www.henrypp.org/product/memreduct" target="_blank" rel="noopener">https://www.henrypp.org/product/memreduct</a></li><li>介绍：轻量化清理机器内存的利器，具体的看我的另外一篇文章介绍 <a href="https://longshilin.com/blog/70c155f1.html">轻量化去广告的内存清理工具</a> <i class="fas fa-archive"></i> <a href="https://pan.baidu.com/s/1FyGqexfCUFrEp-ZKxqcPuw" target="_blank" rel="noopener">详细地址</a></li><li>推荐指数：⭐️⭐️⭐️⭐️</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的工具合集，基本上是一句话概括每一个工具，并且配上官方使用的网页介绍，以及对于功能介绍的&lt;i class=&quot;fas fa-file-pdf&quot;&gt;&lt;/i&gt;离线PDF版本以及安装包等资源 &lt;i class=&quot;fas fa-archive&quot;&gt;&lt;/i&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="电脑管理" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/%E7%94%B5%E8%84%91%E7%AE%A1%E7%90%86/"/>
    
    
      <category term="tools" scheme="https://longshilin.com/blog/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>在mybatis中构建带有sql in查询的mapper语法</title>
    <link href="https://longshilin.com/blog/9880d52a.html"/>
    <id>https://longshilin.com/blog/9880d52a.html</id>
    <published>2018-11-28T13:57:30.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>在mapper中编写带有sql in语法的sql时，需要注意不能直接以字符串&quot;in(…)&quot;的形式将语句贴在sql中，需要以list集合的形式遍历出来，具体的表达方式如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;select id=&quot;selectAllServiceByServiceType&quot; resultMap=&quot;BaseResultMap2&quot; parameterType=&quot;java.util.List&quot;&gt;</span><br><span class="line"> SELECT DISTINCT SERVICE_TYPE, IMAGE_TAG</span><br><span class="line"> FROM `SERVICE_CONFIG`</span><br><span class="line"> WHERE STATUS = 1</span><br><span class="line"> AND SERVICE_TYPE IN</span><br><span class="line"> &lt;foreach collection=&quot;list&quot; item=&quot;item&quot; index=&quot;index&quot; open=&quot;(&quot; separator=&quot;,&quot; close=&quot;)&quot;&gt;</span><br><span class="line">  #&#123;item&#125;</span><br><span class="line"> &lt;/foreach&gt;</span><br><span class="line"> ORDER BY SERVICE_TYPE;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><p>上面得到的sql也就是：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT SERVICE_TYPE, IMAGE_TAG</span><br><span class="line">FROM `SERVICE_CONFIG`</span><br><span class="line">WHERE STATUS = 1</span><br><span class="line">AND SERVICE_TYPE IN (1, 2, 3, 4, 5);</span><br></pre></td></tr></table></figure><p>这里需要注意的是，foreach中的collection字段的list值是固定表达方式，在对应的mapper方法中，传入参数名也应为list，具体表示如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List&lt;ServiceConfig&gt; selectAllServiceByServiceType(List&lt;Integer&gt; list);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在mapper中编写带有sql in语法的sql时，需要注意不能直接以字符串&amp;quot;in(…)&amp;quot;的形式将语句贴在sql中，需要以list集合的形式遍历出来，具体的表达方式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;select id=&amp;quot;selectAllServiceByServiceType&amp;quot; resultMap=&amp;quot;BaseResultMap2&amp;quot; parameterType=&amp;quot;java.util.List&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; SELECT DISTINCT SERVICE_TYPE, IMAGE_TAG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; FROM `SERVICE_CONFIG`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; WHERE STATUS = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; AND SERVICE_TYPE IN&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;foreach collection=&amp;quot;list&amp;quot; item=&amp;quot;item&amp;quot; index=&amp;quot;index&amp;quot; open=&amp;quot;(&amp;quot; separator=&amp;quot;,&amp;quot; close=&amp;quot;)&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  #&amp;#123;item&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/foreach&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ORDER BY SERVICE_TYPE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="语言" scheme="https://longshilin.com/blog/categories/%E8%AF%AD%E8%A8%80/"/>
    
      <category term="mybatis" scheme="https://longshilin.com/blog/categories/%E8%AF%AD%E8%A8%80/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://longshilin.com/blog/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Keep Running</title>
    <link href="https://longshilin.com/blog/f1cb4bde.html"/>
    <id>https://longshilin.com/blog/f1cb4bde.html</id>
    <published>2018-11-15T14:03:48.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>今晚的线上Keep跑~ 慢慢的跑而又满满的幸福</p><a id="more"></a><p><img src="https://ws1.sinaimg.cn/large/005EsThygy1fx8h12ek7fj30yi1pctpb.jpg" alt=""></p><p><img src="https://ws1.sinaimg.cn/large/005EsThygy1fx8h1a6fdmj30u01hcq5e.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今晚的线上Keep跑~ 慢慢的跑而又满满的幸福&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AWS Certified SysOps Administrator – Associate 考试的建议准备路径</title>
    <link href="https://longshilin.com/blog/2e3c6403.html"/>
    <id>https://longshilin.com/blog/2e3c6403.html</id>
    <published>2018-10-27T14:00:00.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://i.imgur.com/8xNyw7N.png" alt=""> 本篇博文主要介绍AWS Certified SysOps Administrator – Associate 考试的建议准备路径的详细执行计划清单。参考<a href="https://amazonaws-china.com/cn/certification/certification-prep/" target="_blank" rel="noopener">准备认证</a></p><p><img src="https://i.imgur.com/Ria4nMk.png" alt="AWS学习路径"></p><a id="more"></a><div class="bs-callout bs-callout-primary"><p>下面介绍的每个环节都是需要重视的~</p></div><h2 id="第-1-步：参加-aws-培训课程">第 1 步：参加 AWS 培训课程</h2><p>培训可以帮助您提高技术技能，并了解 AWS 最佳使用实践。</p><p><a href="https://amazonaws-china.com/training/course-descriptions/sysops" target="_blank" rel="noopener">Systems Operations on AWS</a><br>课堂 | 3 天</p><blockquote><p>这里没有参加培训课程，改为自己自学了解，下面是在这个阶段会接触到的一些内容。</p></blockquote><h3 id="awsome-day-官方视频-英文版">AWSome Day 官方视频（英文版）</h3><p>下面推荐YouTube上AWS官方发布的三个视频，是 <kbd>AWSome Day 2018</kbd> 的官方视频。</p><div class="video-container"><iframe src="//www.youtube.com/embed/K3qbY8j_Qfs" frameborder="0" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="//www.youtube.com/embed/xToY64aiCgc" frameborder="0" allowfullscreen></iframe></div><br><div class="video-container"><iframe src="//www.youtube.com/embed/2-F4bariCcs" frameborder="0" allowfullscreen></iframe></div><h3 id="awsome-day-2018-全国大学生巡回视频-中文版">AWSome Day 2018 全国大学生巡回视频（中文版）</h3><p><a href="http://www.xuetangx.com/courses/course-v1:AWS+awsomeday+2017_t1/courseware" target="_blank" rel="noopener">AWSome Day 2018 全国大学生巡回视频</a></p><p>接下来的进阶课程，可以在学堂在线的<a href="http://www.xuetangx.com/livecast/microdegree/introduce/3/" target="_blank" rel="noopener">云计算解决方案架构师</a>课程中获得。</p><h3 id="附加">附加</h3><p>接下来你可以点击<a href="https://www.aws.training/" target="_blank" rel="noopener">这个链接</a>了解AWS教学视频和自主进度实验室。</p><h2 id="第-2-步：查看考试指南和样题">第 2 步：查看考试指南和样题</h2><p>了解考试涉及的概念并整体了解需要学习哪些内容。查看 <a href="http://awstrainingandcertification.s3.amazonaws.com/production/AWS_certified_sysops_associate_blueprint.pdf" target="_blank" rel="noopener">AWS Certified SysOps Administrator – Associate 考试指南</a>。<br>学习提示：不要跳过样题。</p><p>考试<a href="https://d0.awsstatic-china.com/training-and-certification/docs/AWS_certified_sysops_associate_examsample.pdf" target="_blank" rel="noopener">样题</a>可以帮助您检查自己对知识的掌握情况，并指明需要进一步学习的概念和领域。</p><h2 id="第-3-步：阅读官方考试学习指南">第 3 步：阅读官方考试学习指南</h2><p>AWS Certified SysOps Administrator – Associate 考试：官方学习指南由 AWS 专家编写而成。该指南可以让您做好准备以便在考试中证明自己的网络技能，其中涵盖各项考试目标，并结合 AWS Certified SysOps Administrator 可能遇到的各种情况指导您完成动手实验。从部署、管理和操作到迁移、数据流、成本控制等等，本指南将帮助您掌握与 AWS 相关的流程和最佳实践。</p><p>这里可以参考我的另外一篇博文<a href="https://longshilin.com/blog/112641e9.html">有关AWS考证的思考</a></p><h2 id="第-4-步：研究-aws-白皮书和常见问题">第 4 步：研究 AWS 白皮书和常见问题</h2><p>通过 AWS 团队、独立分析师和 AWS 合作伙伴编制的白皮书加深您的技术理解。</p><p>学习提示：重点学习以下白皮书。</p><p>云架构设计：AWS 最佳实践 || AWS 安全最佳实践 || Amazon Web Services：安全流程概述 || AWS 架构完善的框架 || AWS 上的开发和测试 || 使用 AWS 的备份与恢复方法 || Amazon Virtual Private Cloud 连接选项 || AWS 的定价机制</p><p>查看所有白皮书</p><p>浏览常见问题列表，熟悉不同用户经常提出的问题。</p><p>学习提示：重点查看以下常见问题。</p><p>Amazon EC2 || Amazon S3 || Amazon VPC || Amazon Route 53 || Amazon RDS || Amazon SQS</p><p>查看所有常见问题</p><h2 id="第-5-步：参加备考培训">第 5 步：参加备考培训</h2><p>利用我们的备考：AWS Certified SysOps Administrator – Associate（AWS 认证系统操作管理员 – 助理级）课程，向经过认证的技术讲师学习备考策略。</p><p><img src="https://i.imgur.com/mPAj5wu.png" alt="AWS培训课程指南"></p><blockquote><p>这一步也没有参加备考培训，转为是自己的自学过程，会在下面贴出自己的学习路径</p></blockquote><h3 id="aws尖峰学堂系列">AWS尖峰学堂系列</h3><p>通过<kbd>AWS尖峰学堂系列</kbd>课程的学习，可以掌握各个主要服务的入门级介绍，下面是整个视频列表。</p><ul><li>01-IAM忠实的AWS守门员.mp4</li><li>02-AWS安全运营体系概览.mp4</li><li></li></ul><h3 id="快速上手实验室">快速上手实验室</h3><p><a href="https://amazon.qwiklabs.com/catalog?locale=zh" target="_blank" rel="noopener">动手实验</a></p><h2 id="第-6-步：参加模拟考试">第 6 步：参加模拟考试</h2><p>在规定时间内答题，测试自己对知识的掌握情况。前往 aws.training 注册。</p><blockquote><p>这一步也没有参加线上模拟考试，下面会记录自己的刷题路径</p></blockquote><h2 id="第-7-步：报考并获得认证">第 7 步：报考并获得认证</h2><p>前往 aws.training 在您附近的测试中心报考。下面是AWS中各个认证类型</p><p><img src="https://i.imgur.com/enpg9cz.png" alt="AWS认证类别"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.imgur.com/8xNyw7N.png&quot; alt=&quot;&quot;&gt; 本篇博文主要介绍AWS Certified SysOps Administrator – Associate 考试的建议准备路径的详细执行计划清单。参考&lt;a href=&quot;https://amazonaws-china.com/cn/certification/certification-prep/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;准备认证&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/Ria4nMk.png&quot; alt=&quot;AWS学习路径&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="认证" scheme="https://longshilin.com/blog/categories/%E8%AE%A4%E8%AF%81/"/>
    
      <category term="AWS认证" scheme="https://longshilin.com/blog/categories/%E8%AE%A4%E8%AF%81/AWS%E8%AE%A4%E8%AF%81/"/>
    
    
      <category term="aws-soa" scheme="https://longshilin.com/blog/tags/aws-soa/"/>
    
      <category term="aws" scheme="https://longshilin.com/blog/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>如何更优雅的写文章</title>
    <link href="https://longshilin.com/blog/52b07b5c.html"/>
    <id>https://longshilin.com/blog/52b07b5c.html</id>
    <published>2018-10-24T21:55:32.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<div class="bs-callout bs-callout-primary"><p>如何优雅的写作，这里会包含两个模块：一个是如何方便些，一个是如何写的漂亮。</p></div><a id="more"></a><h2 id="如何写的方便">如何写的方便</h2><p>下面首先从如何方便写开始，这里我推荐Atom这款由 <i class="fa fa-github"></i>开发的编辑器，其中包含丰富的插件系统，可以支撑你的MarkDown写作，并且这些个性化设置及插件可以跨平台同步，实现你在多台机器上可以快速搭建你最熟悉的写作环境。</p><p>对于我使用的插件，可以参考我的这篇文章 <a href="https://longshilin.com/wiki/editor/atom-practice.html">Atom 实战</a>，里面包含如何同步fork我的插件列表到你的Atom个人配置中~ 🎆</p><p>下面我简单罗列下我安装的插件，在<a href="https://atom.io/packages" target="_blank" rel="noopener">Atom Packages</a>可以查询到下面这些的插件，并自行安装各个插件。</p><ul><li>atom-terminal</li><li>autocomplete-emjis</li><li>language-markdown</li><li>markdown-preview-enhanced</li><li>markdown-table-editor</li><li>markdown-writer</li><li>sync-setting</li></ul><h2 id="如何写的漂亮">如何写的漂亮</h2><p>这里分享有关这个hexo 主题原作者分享的一些渲染方法 <a href="https://www.cgmartin.com/tags/hexo/" target="_blank" rel="noopener">Hexo Theme</a>，详细信息可以查看在线PDF <a href="https://github.com/longshilin/files-repo/blob/master/Getting%20Started%20with%20the%20Hexo%20Blogging%20Framework%20_%20Christopher%20Martin.pdf" target="_blank" rel="noopener">Getting Started with the Hexo Blogging Framework</a> 和 <a href="https://github.com/longshilin/files-repo/blob/master/Hexo%20Theme_%20Bootstrap%20Blog%20_%20Christopher%20Martin.pdf" target="_blank" rel="noopener">Hexo Theme_ Bootstrap Blog</a></p><p>下面会总结一下最佳实践方式：</p><h3 id="表格">表格</h3><p>Markdown:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| Table Header 1 | Table Header 2 | Table Header 3 |</span><br><span class="line">| - | - | - |</span><br><span class="line">| Division 1 | Division 2 | Division 3 |</span><br><span class="line">| Division 1 | Division 2 | Division 3 |</span><br><span class="line">| Division 1 | Division 2 | Division 3 |</span><br></pre></td></tr></table></figure><p>…outputs:</p><table><thead><tr><th>Table Header 1</th><th>Table Header 2</th><th>Table Header 3</th></tr></thead><tbody><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr><tr><td>Division 1</td><td>Division 2</td><td>Division 3</td></tr></tbody></table><h3 id="bootstrap标注">Bootstrap标注</h3><p>这个Bootstrap标注可以给你的文章增添更多的醒目标记信息。</p><p>In the Markdown:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% callout info %&#125;</span><br><span class="line">#### &#123;% fa info-circle %&#125; Info</span><br><span class="line">This is some info content</span><br><span class="line">&#123;% endcallout %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% callout warning %&#125;</span><br><span class="line">#### &#123;% fa exclamation-triangle %&#125; Warning</span><br><span class="line">This is some warning content</span><br><span class="line">&#123;% endcallout %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% callout danger %&#125;</span><br><span class="line">#### &#123;% fa exclamation-triangle %&#125; Danger</span><br><span class="line">This is some danger content</span><br><span class="line">&#123;% endcallout %&#125;</span><br></pre></td></tr></table></figure><p>…outputs:</p><div class="bs-callout bs-callout-info"><h4 id="i-class-fa-fa-info-circle-i-info"><i class="fa fa-info-circle"></i> Info</h4><p>This is some info content</p></div><div class="bs-callout bs-callout-warning"><h4 id="i-class-fa-fa-exclamation-triangle-i-warning"><i class="fa fa-exclamation-triangle"></i> Warning</h4><p>This is some warning content</p></div><div class="bs-callout bs-callout-danger"><h4 id="i-class-fa-fa-exclamation-triangle-i-danger"><i class="fa fa-exclamation-triangle"></i> Danger</h4><p>This is some danger content</p></div><h3 id="fa图标">fa图标</h3><p>在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome 资源</a>  可以选择你需要的任意图标。</p><blockquote><p>举个栗子： 对于<i class="fa fa-github"></i>在Font Awesome中是<code>&lt;i class=&quot;fa github&quot;&gt;&lt;/i&gt;</code>，于是在博客中引入这个图标时，写入<code><i class="fa fa-github"></i></code></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;bs-callout bs-callout-primary&quot;&gt;&lt;p&gt;如何优雅的写作，这里会包含两个模块：一个是如何方便些，一个是如何写的漂亮。&lt;/p&gt;
&lt;/div&gt;
    
    </summary>
    
      <category term="工具" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="写作" scheme="https://longshilin.com/blog/categories/%E5%B7%A5%E5%85%B7/%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="write" scheme="https://longshilin.com/blog/tags/write/"/>
    
      <category term="markdown" scheme="https://longshilin.com/blog/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>站点的自动化部署及发布（CI/CD）</title>
    <link href="https://longshilin.com/blog/ea0641b.html"/>
    <id>https://longshilin.com/blog/ea0641b.html</id>
    <published>2018-10-24T21:55:04.000Z</published>
    <updated>2019-05-31T09:42:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看了业界比较知名的个人博主左耳朵耗子-陈浩在极客时间专栏的博文深有感触，其中对于自己写博如何将文章写得“独一份”，这是你需要思考和追求的，与其你不断优化站点的SEO，不如让你的文章更加与众不同，观点是别人少有研究，或者你的观点更鲜明，你就能被别人搜索到。</p><p>基于这个理念，我觉得对这两个月折腾的个人建站最有价值的部分，有必要好好写写，分享给想通过自动化的方式部署及发布你的博文的朋友。</p><a id="more"></a><p>在这篇文章中，我主要分享如何借助外部工具实现你的博文自动部署及更新发布站点，其中涉及的主要技术有：</p><ul><li>docker</li><li>git</li></ul><p>借助的第三方平台时<a href="https://www.gitlab.com" target="_blank" rel="noopener">Gitlab</a>，可能很多朋友听说或是用过<a href="https://www.github.com" target="_blank" rel="noopener">Github</a>，但对前者熟悉度不高。其实我也是在最近搞自动化部署站点的时候，才了解这个工具的。它的优势在于，不仅同样提供Pages功能，而且能够支持将资源push到仓库后，自动触发Gitlab的<a href="https://about.gitlab.com/features/gitlab-ci-cd/" target="_blank" rel="noopener">CI/CD模块</a>，这样能够按照你设定的方式进行构建和部署发布。</p><p><img src="https://longshilin.com/images/20190507102157.png" alt="ci-cd-test-deploy-illustration"></p><p>就如同下面这张图中，你的资源更新和自动化部署是可以迭代更新的，运用到我们持续集成我们的文章，持续发布我们的站点，同样是可以的。</p><p><img src="https://longshilin.com/images/20190507102146.png" alt="ci-cd-devops-loop"></p><p>下面我详细说一下我们站点的自动化部署及发布需要进行的准备工作：</p><ol><li>首先你需要创建一个gitlab的项目仓库，这里gitlab比github更nice的地方是支持免费的私有仓库服务，见<a href="https://docs.gitlab.com/ee/user/project/repository/" target="_blank" rel="noopener">创建资源仓库</a></li><li>然后编写gitlab能够自动部署的脚本命令 <a href="https://docs.gitlab.com/ee/ci/yaml/" target="_blank" rel="noopener">.gitlab-ci.yml</a></li><li>在编写上一步yml文件时，可以模仿这个<a href="https://gitlab.com/pages/hexo#gitlab-ci" target="_blank" rel="noopener">gitlab hexo page</a><br>这里我将我项目中用的yml文件贴出来，供大家参考：</li></ol><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># longsl/hexo2simiki</span></span><br><span class="line"><span class="attr">image:</span> <span class="string">$你的docker-image镜像，如：longsl/hexo2simiki</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pages:</span></span><br><span class="line"><span class="attr">  cache:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">/builds/longshilin/longshilindotcom/blog/node_modules</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">HOME=`pwd`</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">REMOTE_PROJECT=longshilindotcom</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">user.email</span> <span class="string">"583297550@qq.com"</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">config</span> <span class="bullet">--global</span> <span class="string">user.name</span> <span class="string">"longsl"</span></span><br><span class="line">    <span class="comment"># 构建hexo</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">$HOME/blog</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cp</span> <span class="bullet">-r</span> <span class="string">blog</span> <span class="string">$HOME/public</span></span><br><span class="line">    <span class="comment"># 构建simiki</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">$HOME/wiki</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">simiki</span> <span class="string">g</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cp</span> <span class="bullet">-r</span> <span class="string">wiki</span> <span class="string">$HOME/public</span></span><br><span class="line">    <span class="comment"># 同步静态网页到国内git.dev.tencent.com仓库</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">cd</span> <span class="string">~;</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">git@git.dev.tencent.com:yilong0722/longshilindotcom.git;</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">rm</span> <span class="bullet">-rf</span> <span class="string">$REMOTE_PROJECT/*;</span> <span class="string">cp</span> <span class="bullet">-rf</span> <span class="string">$HOME/public/*</span> <span class="string">$REMOTE_PROJECT;</span> <span class="string">cd</span> <span class="string">$REMOTE_PROJECT</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">git</span> <span class="string">add</span> <span class="string">*;</span> <span class="string">git</span> <span class="string">commit</span> <span class="bullet">-a</span> <span class="bullet">-m</span> <span class="string">"Site updated：`date`"</span><span class="string">;</span> <span class="string">git</span> <span class="string">push</span> <span class="bullet">-f</span></span><br><span class="line"><span class="attr">  artifacts:</span></span><br><span class="line"><span class="attr">    paths:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">public</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>在你的新增资源push到gitlab的代码仓库中，会自动触发CI/CD程序，即运行这个默认脚本。最终上面的artifacts中表示的是你要发布的静态资源。默认情况下它是可以通过<a href="https://docs.gitlab.com/ee/user/project/pages/" target="_blank" rel="noopener">gitlab page</a>来访问，如果你觉得gitlab pages对国内的访问速度不够快的话，<a href="http://xn--publicpagescoding-jy50af2jj0cwxs9ey3mk8csxm4vaj94d6h7aseyp5t1tevvow9ynk3c7f6cra0130h6qzec9ualpbe51o.net" target="_blank" rel="noopener">你还可以将public下的静态资源再推送到国内同样支持pages功能的coding.net</a>，ps:最近coding.net被腾讯开发者平台收购了，成为了腾讯开发者平台的资源仓库。</p><ol start="5"><li>在gitlab pages或者coding pages上绑定你的域名，可以参考<a href="https://longshilin.com/blog/57c188a8.html">gitlab绑定域名</a>，并设置国内和国外的分区访问和DNS解析。实现国内国外对资源的加载速度的优化。下面是我的域名在腾讯云控制台中的设置详情。<br><img src="https://i.imgur.com/MdwYs8q.png" alt=""></li></ol><p><strong>这样能够使得国内用户和海外用户能相对快读的加载你的静态资源网页。</strong></p><blockquote><p>2019-01-09 更新<br>目前直接是通过将静态网站部署在github上，并开启page功能向全网同步。 资源CI/CD依然是gitlab，<a href="http://xn--coding-hs2ji57af9rzh6cped.net" target="_blank" rel="noopener">弃用国内的coding.net</a> 因为在我使用期间经常出现域名解析出问题，访问不了的情况。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看了业界比较知名的个人博主左耳朵耗子-陈浩在极客时间专栏的博文深有感触，其中对于自己写博如何将文章写得“独一份”，这是你需要思考和追求的，与其你不断优化站点的SEO，不如让你的文章更加与众不同，观点是别人少有研究，或者你的观点更鲜明，你就能被别人搜索到。&lt;/p&gt;
&lt;p&gt;基于这个理念，我觉得对这两个月折腾的个人建站最有价值的部分，有必要好好写写，分享给想通过自动化的方式部署及发布你的博文的朋友。&lt;/p&gt;
    
    </summary>
    
      <category term="网站构建" scheme="https://longshilin.com/blog/categories/%E7%BD%91%E7%AB%99%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="CI/CD" scheme="https://longshilin.com/blog/tags/CI-CD/"/>
    
  </entry>
  
</feed>
